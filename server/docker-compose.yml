version: '3.4'

services:
  gerenciamentofrota.api:
    container_name: gerenciamentofrota.api
    image: ${DOCKER_REGISTRY-}gerenciamentofrotaapi
    build:
      context: .
      dockerfile: GerenciamentoFrota.API/Dockerfile
    environment:
        MONGO_USER: ${MONGO_USER}
        MONGO_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "51230:80"
    depends_on:
      - mongo
      - redis

  front-end:
    container_name: front-end
    restart: always
    image: gabrielmarx/gerenciamento-frota-front-end
    ports:
      - "4200:80"
    depends_on:
      - gerenciamentofrota.api

  redis:
    image: redis
    container_name: redis
    restart: always
    volumes: 
      - cache:/data
    ports:
      - "6379:6379"

  redis-commander:
     container_name: redis-commander
     restart: always
     image: rediscommander/redis-commander:latest
     environment:
       REDIS_HOSTS: local:redis:6379
     ports:
       - "8081:8081"
     depends_on:
       - redis

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8082:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo

volumes:
  cache:
    driver: local
    
